/*
One of the streets in your city has L street lights. Each light ‘i’ covers the street from xi to yi .
Find the length of street covered with light.
Input 1: L denoting number of street lights.
Input 2: Array of L*2 elements. For each row i, (xi, yi) denotes the covered distance by the
street light ‘i’.
Output: Your function should return the length of street covered by light.
Example-1:
Input 1: 1
Input 2: (5, 10)
Output: 5
Example-2:
Input 1: 2
Input 2: (5, 10), (8, 12)
Output: 7 i.e. (10-5) + (12-8) - (10-8) (as it is common)
*/


#include<bits/stdc++.h>
using namespace std;
int main()
{
    
    int n,i,j,k,arr[1000000];
    cin>>n;
    for(i=0;i<(2*n);i++)
    
{
    cin>>arr[i];
}
k=(2*n);
int sum=0;
for(i=1;i<k;i=i+2)
{
    sum=sum+arr[i]-arr[i-1];
    if(i>1 && arr[i-1]>arr[i-3] && arr[i-1]<arr[i-2])
    {
        sum=sum-(arr[i-2]-arr[i-1]);
    }
}
cout<<sum;
}
